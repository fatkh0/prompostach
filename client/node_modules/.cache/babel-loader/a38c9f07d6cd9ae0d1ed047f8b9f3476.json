{"ast":null,"code":"var _jsxFileName = \"/Users/erik/Desktop/prompostach/src/components/HamburgerMenu/HamburgerMenuContainer.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport HamburgerMenu from './HamburgerMenu';\nimport { createContext, useContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MyGlobalContext = /*#__PURE__*/createContext({\n  copy: 'Hello World',\n  // set a default value\n  setCopy: () => {}\n});\nexport const useGlobalContext = () => {\n  _s();\n\n  return useContext(MyGlobalContext);\n};\n\n_s(useGlobalContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nconst HamburgerMenuContainer = /*#__PURE__*/_s2( /*#__PURE__*/React.memo(_c = _s2(() => {\n  _s2();\n\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const HamburegerContext = /*#__PURE__*/createContext({\n    isMenuOpen,\n    setIsMenuOpen\n  });\n  return /*#__PURE__*/_jsxDEV(HamburegerContext.Provider, {\n    value: {\n      isMenuOpen,\n      setIsMenuOpen\n    },\n    children: /*#__PURE__*/_jsxDEV(HamburgerMenu, {\n      isMenuOpen: isMenuOpen,\n      setIsMenuOpen: setIsMenuOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}, \"vK10R+uCyHfZ4DZVnxbYkMWJB8g=\")), \"vK10R+uCyHfZ4DZVnxbYkMWJB8g=\");\n\n_c2 = HamburgerMenuContainer;\nexport default HamburgerMenuContainer;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"HamburgerMenuContainer$React.memo\");\n$RefreshReg$(_c2, \"HamburgerMenuContainer\");","map":{"version":3,"names":["React","useState","HamburgerMenu","createContext","useContext","MyGlobalContext","copy","setCopy","useGlobalContext","HamburgerMenuContainer","memo","isMenuOpen","setIsMenuOpen","HamburegerContext"],"sources":["/Users/erik/Desktop/prompostach/src/components/HamburgerMenu/HamburgerMenuContainer.tsx"],"sourcesContent":["import React, { LegacyRef, useRef, useState, RefObject } from 'react'\nimport Hamburger from '../../assets/Hamburger/Hamburger'\nimport showControl from '../../assets/showControl/showControl'\nimport NavbarContainer from '../Navbar/NavbarContainer'\nimport { useOnClickOutside } from \"usehooks-ts\";\nimport HamburgerMenu from './HamburgerMenu';\nimport { createContext, useContext } from \"react\"\n\n\n\nexport type HamburgerContent = {\n  copy: string\n  setCopy:(c: string) => void\n}\nexport const MyGlobalContext = createContext<HamburgerContent>({\ncopy: 'Hello World', // set a default value\nsetCopy: () => {},\n})\nexport const useGlobalContext = () => useContext(MyGlobalContext)\n\n\ntype TProps = {}\n\n\nconst HamburgerMenuContainer: React.FC<TProps> = React.memo(() => {\n\n    const [isMenuOpen, setIsMenuOpen] = useState(false) \n\n    type THamburgerContext = {\n        isMenuOpen: boolean\n        setIsMenuOpen: (isMenuOpen: boolean) => void\n    }\n\n    const HamburegerContext = createContext<THamburgerContext>({\n        isMenuOpen,\n        setIsMenuOpen\n    })\n\n    \n    return (\n        <HamburegerContext.Provider value={{isMenuOpen, setIsMenuOpen}} >\n            <HamburgerMenu isMenuOpen={isMenuOpen} setIsMenuOpen={setIsMenuOpen} />\n        </HamburegerContext.Provider>\n    ) \n})\n\nexport default HamburgerMenuContainer"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAmCC,QAAnC,QAA8D,OAA9D;AAKA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,aAAT,EAAwBC,UAAxB,QAA0C,OAA1C;;AAQA,OAAO,MAAMC,eAAe,gBAAGF,aAAa,CAAmB;EAC/DG,IAAI,EAAE,aADyD;EAC1C;EACrBC,OAAO,EAAE,MAAM,CAAE;AAF8C,CAAnB,CAArC;AAIP,OAAO,MAAMC,gBAAgB,GAAG;EAAA;;EAAA,OAAMJ,UAAU,CAACC,eAAD,CAAhB;AAAA,CAAzB;;GAAMG,gB;;AAMb,MAAMC,sBAAwC,kCAAGT,KAAK,CAACU,IAAN,UAAW,MAAM;EAAA;;EAE9D,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,KAAD,CAA5C;EAOA,MAAMY,iBAAiB,gBAAGV,aAAa,CAAoB;IACvDQ,UADuD;IAEvDC;EAFuD,CAApB,CAAvC;EAMA,oBACI,QAAC,iBAAD,CAAmB,QAAnB;IAA4B,KAAK,EAAE;MAACD,UAAD;MAAaC;IAAb,CAAnC;IAAA,uBACI,QAAC,aAAD;MAAe,UAAU,EAAED,UAA3B;MAAuC,aAAa,EAAEC;IAAtD;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAKH,CApBgD,kCAAH,iCAA9C;;MAAMH,sB;AAsBN,eAAeA,sBAAf"},"metadata":{},"sourceType":"module"}