{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\n\nconst useAutoClose = (isOpen, setIsOpen, currentElement) => {\n  _s();\n\n  const handleCloser = event => {\n    if (!isOpen) return;\n\n    if (event.target !== currentElement) {\n      console.log('event.target: ', event.target);\n      console.log('currentElement: ', currentElement);\n      setIsOpen(false);\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener('click', handleCloser);\n    return window.removeEventListener('click', handleCloser);\n  }, [isOpen, currentElement]);\n};\n\n_s(useAutoClose, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\nexport default useAutoClose;\n/*\n\nconst useAutoClose = ({ setIsOpen, menu }: TAutoClose) => {\n    const handleClosure = React.useCallback(\n      event => !menu.current.contains(event.target) && setIsOpen(false),\n      [setIsOpen, menu]\n    )\n  \n    React.useEffect(() => {\n      window.addEventListener('click', handleClosure)\n      window.addEventListener('focusin', handleClosure)\n  \n      return () => {\n        window.removeEventListener('click', handleClosure)\n        window.removeEventListener('focusin', handleClosure)\n      }\n    }, [handleClosure, menu])\n  }\n*/","map":{"version":3,"names":["useEffect","useAutoClose","isOpen","setIsOpen","currentElement","handleCloser","event","target","console","log","window","addEventListener","removeEventListener"],"sources":["/Users/erik/Desktop/prompostach/src/hoc/useAutoClose.tsx"],"sourcesContent":["import React, { useEffect } from \"react\";\n\n\ntype TAutoClose = {\n    isOpen: boolean\n    setIsOpen: (isOpen: boolean) => void\n    currentElement: HTMLDivElement | HTMLInputElement | null | HTMLElement\n}\n\nconst useAutoClose = (\n    isOpen: boolean, \n    setIsOpen: (isOpen: boolean) => void, \n    currentElement: HTMLDivElement | HTMLInputElement | null | HTMLElement): void => {\n\n    const handleCloser = (event: Event) => {\n        if (!isOpen) return\n\n        if (event.target !== currentElement) {\n\n            console.log('event.target: ', event.target)\n            console.log('currentElement: ', currentElement)\n            setIsOpen(false)\n        }\n    }\n\n    useEffect(() => {\n\n        window.addEventListener('click', handleCloser)\n\n        return window.removeEventListener('click', handleCloser)\n\n    }, [isOpen, currentElement])\n\n\n}\n\nexport default useAutoClose\n\n/*\n\nconst useAutoClose = ({ setIsOpen, menu }: TAutoClose) => {\n    const handleClosure = React.useCallback(\n      event => !menu.current.contains(event.target) && setIsOpen(false),\n      [setIsOpen, menu]\n    )\n  \n    React.useEffect(() => {\n      window.addEventListener('click', handleClosure)\n      window.addEventListener('focusin', handleClosure)\n  \n      return () => {\n        window.removeEventListener('click', handleClosure)\n        window.removeEventListener('focusin', handleClosure)\n      }\n    }, [handleClosure, menu])\n  }\n*/"],"mappings":";;AAAA,SAAgBA,SAAhB,QAAiC,OAAjC;;AASA,MAAMC,YAAY,GAAG,CACjBC,MADiB,EAEjBC,SAFiB,EAGjBC,cAHiB,KAGgE;EAAA;;EAEjF,MAAMC,YAAY,GAAIC,KAAD,IAAkB;IACnC,IAAI,CAACJ,MAAL,EAAa;;IAEb,IAAII,KAAK,CAACC,MAAN,KAAiBH,cAArB,EAAqC;MAEjCI,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BH,KAAK,CAACC,MAApC;MACAC,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCL,cAAhC;MACAD,SAAS,CAAC,KAAD,CAAT;IACH;EACJ,CATD;;EAWAH,SAAS,CAAC,MAAM;IAEZU,MAAM,CAACC,gBAAP,CAAwB,OAAxB,EAAiCN,YAAjC;IAEA,OAAOK,MAAM,CAACE,mBAAP,CAA2B,OAA3B,EAAoCP,YAApC,CAAP;EAEH,CANQ,EAMN,CAACH,MAAD,EAASE,cAAT,CANM,CAAT;AASH,CAzBD;;GAAMH,Y;;AA2BN,eAAeA,YAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}