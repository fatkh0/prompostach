{"ast":null,"code":"var _jsxFileName = \"/Users/erik/Desktop/prompostach/src/components/Header/HeaderContainer.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport Header from './Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n/*\ntype TAutoClose = {\n    setIsOpen: (isOpen: boolean) => void\n    menu: Event\n}\n\nconst useAutoClose = ({ setIsOpen, menu }: TAutoClose) => {\n    const handleClosure = React.useCallback(\n      event => !menu.current.contains(event.target) && setIsOpen(false),\n      [setIsOpen, menu]\n    )\n  \n    React.useEffect(() => {\n      window.addEventListener('click', handleClosure)\n      window.addEventListener('focusin', handleClosure)\n  \n      return () => {\n        window.removeEventListener('click', handleClosure)\n        window.removeEventListener('focusin', handleClosure)\n      }\n    }, [handleClosure, menu])\n  }\n*/\nconst HeaderContainer = /*#__PURE__*/_s( /*#__PURE__*/React.memo(_c = _s(props => {\n  _s();\n\n  const [isNavbarOpen, setIsNavbarOpen] = useState(false);\n  const [isLoginMenuOpen, setIsLoginMenuOpen] = useState(true);\n  const [isCartMenuOpen, setIsCartMenuOpen] = useState(false);\n  const hamburger = useRef(null);\n  const shoppingCart = useRef(null);\n  const userIcon = useRef(null);\n  const logoText = 'prompostach';\n\n  const closeMenu = () => {\n    console.log(hamburger.current);\n  }; //@ts-ignore\n\n\n  window.myDiv = hamburger;\n  console.log(hamburger.current);\n  useEffect(() => {\n    document.addEventListener('click', closeMenu);\n  });\n  return /*#__PURE__*/_jsxDEV(Header, {\n    isCartMenuOpen: isCartMenuOpen,\n    setIsCartMenuOpen: setIsCartMenuOpen,\n    isLoginMenuOpen: isLoginMenuOpen,\n    setIsLoginMenuOpen: setIsLoginMenuOpen,\n    isNavbarOpen: isNavbarOpen,\n    logoText: logoText,\n    setIsNavbarOpen: setIsNavbarOpen,\n    hamburger: hamburger,\n    shoppingCart: shoppingCart,\n    userIcon: userIcon,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 12\n  }, this);\n}, \"wXHWcBUuNaw3L5qAEXtdl00bs/E=\")), \"wXHWcBUuNaw3L5qAEXtdl00bs/E=\");\n\n_c2 = HeaderContainer;\nexport default HeaderContainer;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"HeaderContainer$React.memo\");\n$RefreshReg$(_c2, \"HeaderContainer\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Header","HeaderContainer","memo","props","isNavbarOpen","setIsNavbarOpen","isLoginMenuOpen","setIsLoginMenuOpen","isCartMenuOpen","setIsCartMenuOpen","hamburger","shoppingCart","userIcon","logoText","closeMenu","console","log","current","window","myDiv","document","addEventListener"],"sources":["/Users/erik/Desktop/prompostach/src/components/Header/HeaderContainer.tsx"],"sourcesContent":["import React, {useState, useRef, LegacyRef, useEffect} from 'react'\nimport Header from './Header'\n\n\ntype TProps = {\n}\n\n/*\ntype TAutoClose = {\n    setIsOpen: (isOpen: boolean) => void\n    menu: Event\n}\n\nconst useAutoClose = ({ setIsOpen, menu }: TAutoClose) => {\n    const handleClosure = React.useCallback(\n      event => !menu.current.contains(event.target) && setIsOpen(false),\n      [setIsOpen, menu]\n    )\n  \n    React.useEffect(() => {\n      window.addEventListener('click', handleClosure)\n      window.addEventListener('focusin', handleClosure)\n  \n      return () => {\n        window.removeEventListener('click', handleClosure)\n        window.removeEventListener('focusin', handleClosure)\n      }\n    }, [handleClosure, menu])\n  }\n*/\nconst HeaderContainer: React.FC<TProps> = React.memo((props) => {\n\n    const [isNavbarOpen, setIsNavbarOpen] = useState<boolean>(false)\n    const [isLoginMenuOpen, setIsLoginMenuOpen] = useState<boolean>(true)\n    const [isCartMenuOpen, setIsCartMenuOpen] = useState<boolean> (false)\n\n    const hamburger = useRef<HTMLDivElement | null>(null)\n    const shoppingCart = useRef<HTMLDivElement | null>(null)\n    const userIcon = useRef<HTMLDivElement | null>(null)\n\n    const logoText = 'prompostach'\n\n    const closeMenu = () => {\n        \n        console.log(hamburger.current )\n    }\n\n    //@ts-ignore\n    window.myDiv = hamburger\n        console.log(hamburger.current )\n\n\n    useEffect(() => {\n        document.addEventListener('click', closeMenu)\n\n    })\n\n\n\n    \n\n    return <Header \n        isCartMenuOpen={isCartMenuOpen}\n        setIsCartMenuOpen={setIsCartMenuOpen}\n        isLoginMenuOpen={isLoginMenuOpen} \n        setIsLoginMenuOpen={setIsLoginMenuOpen} \n        isNavbarOpen={isNavbarOpen} \n        logoText={logoText} \n        setIsNavbarOpen={setIsNavbarOpen} \n        hamburger={hamburger}\n        shoppingCart={shoppingCart}\n        userIcon={userIcon}\n        {...props}\n        />\n})\n\nexport default HeaderContainer"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,MAAzB,EAA4CC,SAA5C,QAA4D,OAA5D;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,eAAiC,iCAAGL,KAAK,CAACM,IAAN,SAAYC,KAAD,IAAW;EAAA;;EAE5D,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAU,KAAV,CAAhD;EACA,MAAM,CAACS,eAAD,EAAkBC,kBAAlB,IAAwCV,QAAQ,CAAU,IAAV,CAAtD;EACA,MAAM,CAACW,cAAD,EAAiBC,iBAAjB,IAAsCZ,QAAQ,CAAW,KAAX,CAApD;EAEA,MAAMa,SAAS,GAAGZ,MAAM,CAAwB,IAAxB,CAAxB;EACA,MAAMa,YAAY,GAAGb,MAAM,CAAwB,IAAxB,CAA3B;EACA,MAAMc,QAAQ,GAAGd,MAAM,CAAwB,IAAxB,CAAvB;EAEA,MAAMe,QAAQ,GAAG,aAAjB;;EAEA,MAAMC,SAAS,GAAG,MAAM;IAEpBC,OAAO,CAACC,GAAR,CAAYN,SAAS,CAACO,OAAtB;EACH,CAHD,CAZ4D,CAiB5D;;;EACAC,MAAM,CAACC,KAAP,GAAeT,SAAf;EACIK,OAAO,CAACC,GAAR,CAAYN,SAAS,CAACO,OAAtB;EAGJlB,SAAS,CAAC,MAAM;IACZqB,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,EAAmCP,SAAnC;EAEH,CAHQ,CAAT;EASA,oBAAO,QAAC,MAAD;IACH,cAAc,EAAEN,cADb;IAEH,iBAAiB,EAAEC,iBAFhB;IAGH,eAAe,EAAEH,eAHd;IAIH,kBAAkB,EAAEC,kBAJjB;IAKH,YAAY,EAAEH,YALX;IAMH,QAAQ,EAAES,QANP;IAOH,eAAe,EAAER,eAPd;IAQH,SAAS,EAAEK,SARR;IASH,YAAY,EAAEC,YATX;IAUH,QAAQ,EAAEC,QAVP;IAAA,GAWCT;EAXD;IAAA;IAAA;IAAA;EAAA,QAAP;AAaH,CA5CyC,kCAAH,iCAAvC;;MAAMF,e;AA8CN,eAAeA,eAAf"},"metadata":{},"sourceType":"module"}