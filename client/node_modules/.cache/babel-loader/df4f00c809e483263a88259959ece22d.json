{"ast":null,"code":"var _jsxFileName = \"/Users/erik/Desktop/prompostach/src/components/HamburgerMenu/HamburgerMenuContainer.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport HamburgerMenu from './HamburgerMenu';\nimport HamburegerMenuContext from './HamburgerMenuContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst HamburgerMenuContainer = /*#__PURE__*/_s( /*#__PURE__*/React.memo(_c = _s(() => {\n  _s();\n\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  return /*#__PURE__*/_jsxDEV(HamburegerMenuContext.Provider, {\n    value: {\n      isMenuOpen,\n      setIsMenuOpen\n    },\n    children: /*#__PURE__*/_jsxDEV(HamburgerMenu, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}, \"vK10R+uCyHfZ4DZVnxbYkMWJB8g=\")), \"vK10R+uCyHfZ4DZVnxbYkMWJB8g=\");\n\n_c2 = HamburgerMenuContainer;\nexport default HamburgerMenuContainer;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"HamburgerMenuContainer$React.memo\");\n$RefreshReg$(_c2, \"HamburgerMenuContainer\");","map":{"version":3,"names":["React","useState","HamburgerMenu","HamburegerMenuContext","HamburgerMenuContainer","memo","isMenuOpen","setIsMenuOpen"],"sources":["/Users/erik/Desktop/prompostach/src/components/HamburgerMenu/HamburgerMenuContainer.tsx"],"sourcesContent":["import React, { LegacyRef, useRef, useState, RefObject } from 'react'\nimport Hamburger from '../../assets/Hamburger/Hamburger'\nimport showControl from '../../assets/showControl/showControl'\nimport NavbarContainer from '../Navbar/NavbarContainer'\nimport { useOnClickOutside } from \"usehooks-ts\";\nimport HamburgerMenu from './HamburgerMenu';\nimport { createContext, useContext } from \"react\"\nimport HamburegerMenuContext from './HamburgerMenuContext'\n\n\ntype TProps = {}\n\n\nconst HamburgerMenuContainer: React.FC<TProps> = React.memo(() => {\n\n    const [isMenuOpen, setIsMenuOpen] = useState(false) \n    \n    return (\n        <HamburegerMenuContext.Provider value={{isMenuOpen, setIsMenuOpen}} >\n            <HamburgerMenu />\n        </HamburegerMenuContext.Provider>\n    ) \n})\n\nexport default HamburgerMenuContainer"],"mappings":";;;AAAA,OAAOA,KAAP,IAAmCC,QAAnC,QAA8D,OAA9D;AAKA,OAAOC,aAAP,MAA0B,iBAA1B;AAEA,OAAOC,qBAAP,MAAkC,wBAAlC;;;AAMA,MAAMC,sBAAwC,iCAAGJ,KAAK,CAACK,IAAN,SAAW,MAAM;EAAA;;EAE9D,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,KAAD,CAA5C;EAEA,oBACI,QAAC,qBAAD,CAAuB,QAAvB;IAAgC,KAAK,EAAE;MAACK,UAAD;MAAaC;IAAb,CAAvC;IAAA,uBACI,QAAC,aAAD;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAKH,CATgD,kCAAH,iCAA9C;;MAAMH,sB;AAWN,eAAeA,sBAAf"},"metadata":{},"sourceType":"module"}