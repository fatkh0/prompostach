{"ast":null,"code":"var _jsxFileName = \"/Users/erik/Desktop/prompostach/src/components/Header/HeaderContainer.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport Header from './Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst useAutoClose = _ref => {\n  _s();\n\n  let {\n    setIsOpen,\n    menu\n  } = _ref;\n  const handleClosure = React.useCallback(event => !menu.current.contains(event.target) && setIsOpen(false), [setIsOpen, menu]);\n  React.useEffect(() => {\n    window.addEventListener('click', handleClosure);\n    window.addEventListener('focusin', handleClosure);\n    return () => {\n      window.removeEventListener('click', handleClosure);\n      window.removeEventListener('focusin', handleClosure);\n    };\n  }, [handleClosure, menu]);\n};\n\n_s(useAutoClose, \"AXNj/F2zuPqIeWh2XCTjKG9/ys8=\");\n\nconst HeaderContainer = /*#__PURE__*/_s2( /*#__PURE__*/React.memo(_c = _s2(props => {\n  _s2();\n\n  const [isNavbarOpen, setIsNavbarOpen] = useState(false);\n  const [isLoginMenuOpen, setIsLoginMenuOpen] = useState(true);\n  const [isCartMenuOpen, setIsCartMenuOpen] = useState(false);\n  const hamburger = useRef(null);\n  const shoppingCart = useRef(null);\n  const userIcon = useRef(null);\n  const logoText = 'prompostach';\n  return /*#__PURE__*/_jsxDEV(Header, {\n    isCartMenuOpen: isCartMenuOpen,\n    setIsCartMenuOpen: setIsCartMenuOpen,\n    isLoginMenuOpen: isLoginMenuOpen,\n    setIsLoginMenuOpen: setIsLoginMenuOpen,\n    isNavbarOpen: isNavbarOpen,\n    logoText: logoText,\n    setIsNavbarOpen: setIsNavbarOpen,\n    hamburger: hamburger,\n    shoppingCart: shoppingCart,\n    userIcon: userIcon,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 12\n  }, this);\n}, \"T9jIpAW1r1XP2o7Zva2zeeQfG7U=\")), \"T9jIpAW1r1XP2o7Zva2zeeQfG7U=\");\n\n_c2 = HeaderContainer;\nexport default HeaderContainer;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"HeaderContainer$React.memo\");\n$RefreshReg$(_c2, \"HeaderContainer\");","map":{"version":3,"names":["React","useState","useRef","Header","useAutoClose","setIsOpen","menu","handleClosure","useCallback","event","current","contains","target","useEffect","window","addEventListener","removeEventListener","HeaderContainer","memo","props","isNavbarOpen","setIsNavbarOpen","isLoginMenuOpen","setIsLoginMenuOpen","isCartMenuOpen","setIsCartMenuOpen","hamburger","shoppingCart","userIcon","logoText"],"sources":["/Users/erik/Desktop/prompostach/src/components/Header/HeaderContainer.tsx"],"sourcesContent":["import React, {useState, useRef, LegacyRef} from 'react'\nimport Header from './Header'\n\n\ntype TProps = {\n}\n\ntype TAutoClose = {\n    setIsOpen: (isOpen: boolean) => void\n    menu: Event\n}\n\nconst useAutoClose = ({ setIsOpen, menu }: TAutoClose) => {\n    const handleClosure = React.useCallback(\n      event => !menu.current.contains(event.target) && setIsOpen(false),\n      [setIsOpen, menu]\n    )\n  \n    React.useEffect(() => {\n      window.addEventListener('click', handleClosure)\n      window.addEventListener('focusin', handleClosure)\n  \n      return () => {\n        window.removeEventListener('click', handleClosure)\n        window.removeEventListener('focusin', handleClosure)\n      }\n    }, [handleClosure, menu])\n  }\n\nconst HeaderContainer: React.FC<TProps> = React.memo((props) => {\n\n    const [isNavbarOpen, setIsNavbarOpen] = useState<boolean>(false)\n    const [isLoginMenuOpen, setIsLoginMenuOpen] = useState<boolean>(true)\n    const [isCartMenuOpen, setIsCartMenuOpen] = useState<boolean> (false)\n\n    const hamburger = useRef<HTMLDivElement | null>(null)\n    const shoppingCart = useRef<HTMLDivElement | null>(null)\n    const userIcon = useRef<HTMLDivElement | null>(null)\n\n    const logoText = 'prompostach'\n\n\n    return <Header \n        isCartMenuOpen={isCartMenuOpen}\n        setIsCartMenuOpen={setIsCartMenuOpen}\n        isLoginMenuOpen={isLoginMenuOpen} \n        setIsLoginMenuOpen={setIsLoginMenuOpen} \n        isNavbarOpen={isNavbarOpen} \n        logoText={logoText} \n        setIsNavbarOpen={setIsNavbarOpen} \n        hamburger={hamburger}\n        shoppingCart={shoppingCart}\n        userIcon={userIcon}\n        {...props}\n        />\n})\n\nexport default HeaderContainer"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,MAAzB,QAAiD,OAAjD;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;AAWA,MAAMC,YAAY,GAAG,QAAqC;EAAA;;EAAA,IAApC;IAAEC,SAAF;IAAaC;EAAb,CAAoC;EACtD,MAAMC,aAAa,GAAGP,KAAK,CAACQ,WAAN,CACpBC,KAAK,IAAI,CAACH,IAAI,CAACI,OAAL,CAAaC,QAAb,CAAsBF,KAAK,CAACG,MAA5B,CAAD,IAAwCP,SAAS,CAAC,KAAD,CADtC,EAEpB,CAACA,SAAD,EAAYC,IAAZ,CAFoB,CAAtB;EAKAN,KAAK,CAACa,SAAN,CAAgB,MAAM;IACpBC,MAAM,CAACC,gBAAP,CAAwB,OAAxB,EAAiCR,aAAjC;IACAO,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAmCR,aAAnC;IAEA,OAAO,MAAM;MACXO,MAAM,CAACE,mBAAP,CAA2B,OAA3B,EAAoCT,aAApC;MACAO,MAAM,CAACE,mBAAP,CAA2B,SAA3B,EAAsCT,aAAtC;IACD,CAHD;EAID,CARD,EAQG,CAACA,aAAD,EAAgBD,IAAhB,CARH;AASD,CAfH;;GAAMF,Y;;AAiBN,MAAMa,eAAiC,kCAAGjB,KAAK,CAACkB,IAAN,UAAYC,KAAD,IAAW;EAAA;;EAE5D,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCpB,QAAQ,CAAU,KAAV,CAAhD;EACA,MAAM,CAACqB,eAAD,EAAkBC,kBAAlB,IAAwCtB,QAAQ,CAAU,IAAV,CAAtD;EACA,MAAM,CAACuB,cAAD,EAAiBC,iBAAjB,IAAsCxB,QAAQ,CAAW,KAAX,CAApD;EAEA,MAAMyB,SAAS,GAAGxB,MAAM,CAAwB,IAAxB,CAAxB;EACA,MAAMyB,YAAY,GAAGzB,MAAM,CAAwB,IAAxB,CAA3B;EACA,MAAM0B,QAAQ,GAAG1B,MAAM,CAAwB,IAAxB,CAAvB;EAEA,MAAM2B,QAAQ,GAAG,aAAjB;EAGA,oBAAO,QAAC,MAAD;IACH,cAAc,EAAEL,cADb;IAEH,iBAAiB,EAAEC,iBAFhB;IAGH,eAAe,EAAEH,eAHd;IAIH,kBAAkB,EAAEC,kBAJjB;IAKH,YAAY,EAAEH,YALX;IAMH,QAAQ,EAAES,QANP;IAOH,eAAe,EAAER,eAPd;IAQH,SAAS,EAAEK,SARR;IASH,YAAY,EAAEC,YATX;IAUH,QAAQ,EAAEC,QAVP;IAAA,GAWCT;EAXD;IAAA;IAAA;IAAA;EAAA,QAAP;AAaH,CA1ByC,kCAAH,iCAAvC;;MAAMF,e;AA4BN,eAAeA,eAAf"},"metadata":{},"sourceType":"module"}