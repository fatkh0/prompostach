{"ast":null,"code":"var _jsxFileName = \"/Users/erik/Desktop/prompostach/src/components/Header/HeaderContainer.tsx\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useOnClickOutside } from 'usehooks-ts';\nimport Header from './Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst HeaderContainer = /*#__PURE__*/_s2( /*#__PURE__*/React.memo(_c = _s2(props => {\n  var _s = $RefreshSig$();\n\n  _s2();\n\n  const [isNavbarOpen, setIsNavbarOpen] = useState(false);\n  const [isLoginMenuOpen, setIsLoginMenuOpen] = useState(false);\n  const [isCartMenuOpen, setIsCartMenuOpen] = useState(false);\n  const hamburger = useRef(null);\n  const shoppingCart = useRef(null);\n  const userIcon = useRef(null);\n  const logoText = 'prompostach';\n\n  const closeMenu = () => {};\n\n  const autoClose = menu => {\n    _s();\n\n    const handleClickOutside = () => {\n      setIsNavbarOpen(false);\n      setIsLoginMenuOpen(false);\n      setIsCartMenuOpen(false);\n    };\n\n    useOnClickOutside(menu, handleClickOutside);\n  }; //@ts-ignore\n\n\n  _s(autoClose, \"/Agi6J4N6fgqUyMRTRUnAnICqF4=\", false, function () {\n    return [useOnClickOutside];\n  });\n\n  window.myDiv = hamburger.current;\n  useEffect(() => {\n    document.addEventListener('click', closeMenu);\n  });\n  return /*#__PURE__*/_jsxDEV(Header, {\n    isCartMenuOpen: isCartMenuOpen,\n    setIsCartMenuOpen: setIsCartMenuOpen,\n    isLoginMenuOpen: isLoginMenuOpen,\n    setIsLoginMenuOpen: setIsLoginMenuOpen,\n    isNavbarOpen: isNavbarOpen,\n    logoText: logoText,\n    setIsNavbarOpen: setIsNavbarOpen,\n    hamburger: hamburger,\n    shoppingCart: shoppingCart,\n    userIcon: userIcon,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 12\n  }, this);\n}, \"44oKUYEbloJ+31sJOWbCQijVIYk=\")), \"44oKUYEbloJ+31sJOWbCQijVIYk=\");\n\n_c2 = HeaderContainer;\nexport default HeaderContainer;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"HeaderContainer$React.memo\");\n$RefreshReg$(_c2, \"HeaderContainer\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useOnClickOutside","Header","HeaderContainer","memo","props","isNavbarOpen","setIsNavbarOpen","isLoginMenuOpen","setIsLoginMenuOpen","isCartMenuOpen","setIsCartMenuOpen","hamburger","shoppingCart","userIcon","logoText","closeMenu","autoClose","menu","handleClickOutside","window","myDiv","current","document","addEventListener"],"sources":["/Users/erik/Desktop/prompostach/src/components/Header/HeaderContainer.tsx"],"sourcesContent":["import React, {useState, useRef, LegacyRef, useEffect, RefObject} from 'react'\nimport { useOnClickOutside } from 'usehooks-ts'\nimport Header from './Header'\n\n\ntype TProps = {\n}\n\nconst HeaderContainer: React.FC<TProps> = React.memo((props) => {\n\n    const [isNavbarOpen, setIsNavbarOpen] = useState<boolean>(false)\n    const [isLoginMenuOpen, setIsLoginMenuOpen] = useState<boolean>(false)\n    const [isCartMenuOpen, setIsCartMenuOpen] = useState<boolean> (false)\n\n    const hamburger = useRef<RefObject<HTMLElement> | null>(null)\n    const shoppingCart = useRef<RefObject<HTMLElement> | null>(null)\n    const userIcon = useRef<RefObject<HTMLElement> | null>(null)\n\n    const logoText = 'prompostach'\n\n    const closeMenu = () => {\n        \n    }\n\n    const autoClose = (menu: RefObject<HTMLElement>): void => {\n\n        const handleClickOutside = () => {\n            setIsNavbarOpen(false)\n            setIsLoginMenuOpen(false)\n            setIsCartMenuOpen(false)\n        }\n      \n      \n        useOnClickOutside(menu, handleClickOutside)\n    }\n\n\n    //@ts-ignore\n    window.myDiv = hamburger.current\n\n\n    useEffect(() => {\n        document.addEventListener('click', closeMenu)\n\n    })\n\n\n\n    \n\n    return <Header \n        isCartMenuOpen={isCartMenuOpen}\n        setIsCartMenuOpen={setIsCartMenuOpen}\n        isLoginMenuOpen={isLoginMenuOpen} \n        setIsLoginMenuOpen={setIsLoginMenuOpen} \n        isNavbarOpen={isNavbarOpen} \n        logoText={logoText} \n        setIsNavbarOpen={setIsNavbarOpen} \n        hamburger={hamburger}\n        shoppingCart={shoppingCart}\n        userIcon={userIcon}\n        {...props}\n        />\n})\n\nexport default HeaderContainer"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,MAAzB,EAA4CC,SAA5C,QAAuE,OAAvE;AACA,SAASC,iBAAT,QAAkC,aAAlC;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;AAMA,MAAMC,eAAiC,kCAAGN,KAAK,CAACO,IAAN,UAAYC,KAAD,IAAW;EAAA;;EAAA;;EAE5D,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAAU,KAAV,CAAhD;EACA,MAAM,CAACU,eAAD,EAAkBC,kBAAlB,IAAwCX,QAAQ,CAAU,KAAV,CAAtD;EACA,MAAM,CAACY,cAAD,EAAiBC,iBAAjB,IAAsCb,QAAQ,CAAW,KAAX,CAApD;EAEA,MAAMc,SAAS,GAAGb,MAAM,CAAgC,IAAhC,CAAxB;EACA,MAAMc,YAAY,GAAGd,MAAM,CAAgC,IAAhC,CAA3B;EACA,MAAMe,QAAQ,GAAGf,MAAM,CAAgC,IAAhC,CAAvB;EAEA,MAAMgB,QAAQ,GAAG,aAAjB;;EAEA,MAAMC,SAAS,GAAG,MAAM,CAEvB,CAFD;;EAIA,MAAMC,SAAS,GAAIC,IAAD,IAAwC;IAAA;;IAEtD,MAAMC,kBAAkB,GAAG,MAAM;MAC7BZ,eAAe,CAAC,KAAD,CAAf;MACAE,kBAAkB,CAAC,KAAD,CAAlB;MACAE,iBAAiB,CAAC,KAAD,CAAjB;IACH,CAJD;;IAOAV,iBAAiB,CAACiB,IAAD,EAAOC,kBAAP,CAAjB;EACH,CAVD,CAhB4D,CA6B5D;;;EA7B4D,GAgBtDF,SAhBsD;IAAA,QAyBxDhB,iBAzBwD;EAAA;;EA8B5DmB,MAAM,CAACC,KAAP,GAAeT,SAAS,CAACU,OAAzB;EAGAtB,SAAS,CAAC,MAAM;IACZuB,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,EAAmCR,SAAnC;EAEH,CAHQ,CAAT;EASA,oBAAO,QAAC,MAAD;IACH,cAAc,EAAEN,cADb;IAEH,iBAAiB,EAAEC,iBAFhB;IAGH,eAAe,EAAEH,eAHd;IAIH,kBAAkB,EAAEC,kBAJjB;IAKH,YAAY,EAAEH,YALX;IAMH,QAAQ,EAAES,QANP;IAOH,eAAe,EAAER,eAPd;IAQH,SAAS,EAAEK,SARR;IASH,YAAY,EAAEC,YATX;IAUH,QAAQ,EAAEC,QAVP;IAAA,GAWCT;EAXD;IAAA;IAAA;IAAA;EAAA,QAAP;AAaH,CAvDyC,kCAAH,iCAAvC;;MAAMF,e;AAyDN,eAAeA,eAAf"},"metadata":{},"sourceType":"module"}