{"ast":null,"code":"var _jsxFileName = \"/Users/erik/Desktop/prompostach/src/components/Header/HeaderContainer.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport Header from './Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst HeaderContainer = /*#__PURE__*/_s( /*#__PURE__*/React.memo(_c = _s(props => {\n  var _Checkbox$current2;\n\n  _s();\n\n  const [isNavbarOpen, setIsNavbarOpen] = useState(false);\n  const [isLoginMenuOpen, setIsLoginMenuOpen] = useState(false);\n  const [isCartMenuOpen, setIsCartMenuOpen] = useState(false);\n  const hamburger = useRef(null);\n  const shoppingCart = useRef(null);\n  const userIcon = useRef(null);\n  const logoText = 'prompostach';\n\n  const closeMenu = () => {};\n\n  const autoClose = () => {};\n\n  useEffect(() => {\n    const checkIfClickedOutside = () => {\n      var _Checkbox$current;\n\n      if ((_Checkbox$current = Checkbox.current) !== null && _Checkbox$current !== void 0 && _Checkbox$current.checked && Checkbox.current) {\n        callback(false);\n        Checkbox.current.checked = false;\n      }\n    };\n\n    document.addEventListener(\"mousedown\", checkIfClickedOutside);\n    return () => {\n      // Cleanup the event listener\n      document.removeEventListener(\"mousedown\", checkIfClickedOutside);\n    };\n  }, [(_Checkbox$current2 = Checkbox.current) === null || _Checkbox$current2 === void 0 ? void 0 : _Checkbox$current2.checked]); //@ts-ignore\n\n  window.myDiv = hamburger.current;\n  useEffect(() => {\n    document.addEventListener('click', closeMenu);\n  });\n  return /*#__PURE__*/_jsxDEV(Header, {\n    isCartMenuOpen: isCartMenuOpen,\n    setIsCartMenuOpen: setIsCartMenuOpen,\n    isLoginMenuOpen: isLoginMenuOpen,\n    setIsLoginMenuOpen: setIsLoginMenuOpen,\n    isNavbarOpen: isNavbarOpen,\n    logoText: logoText,\n    setIsNavbarOpen: setIsNavbarOpen,\n    hamburger: hamburger,\n    shoppingCart: shoppingCart,\n    userIcon: userIcon,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 12\n  }, this);\n}, \"+b7VMbuNP+oGTjQ4mUE6ylRk7jg=\")), \"+b7VMbuNP+oGTjQ4mUE6ylRk7jg=\");\n\n_c2 = HeaderContainer;\nexport default HeaderContainer;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"HeaderContainer$React.memo\");\n$RefreshReg$(_c2, \"HeaderContainer\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Header","HeaderContainer","memo","props","isNavbarOpen","setIsNavbarOpen","isLoginMenuOpen","setIsLoginMenuOpen","isCartMenuOpen","setIsCartMenuOpen","hamburger","shoppingCart","userIcon","logoText","closeMenu","autoClose","checkIfClickedOutside","Checkbox","current","checked","callback","document","addEventListener","removeEventListener","window","myDiv"],"sources":["/Users/erik/Desktop/prompostach/src/components/Header/HeaderContainer.tsx"],"sourcesContent":["import React, {useState, useRef, LegacyRef, useEffect} from 'react'\nimport Header from './Header'\n\n\ntype TProps = {\n}\n\nconst HeaderContainer: React.FC<TProps> = React.memo((props) => {\n\n    const [isNavbarOpen, setIsNavbarOpen] = useState<boolean>(false)\n    const [isLoginMenuOpen, setIsLoginMenuOpen] = useState<boolean>(false)\n    const [isCartMenuOpen, setIsCartMenuOpen] = useState<boolean> (false)\n\n    const hamburger = useRef<HTMLDivElement | null>(null)\n    const shoppingCart = useRef<HTMLDivElement | null>(null)\n    const userIcon = useRef<HTMLDivElement | null>(null)\n\n    const logoText = 'prompostach'\n\n    const closeMenu = () => {\n        \n    }\n\n    const autoClose = () => {\n        \n    }\n\n\n    useEffect(() => {\n        const checkIfClickedOutside = () => {\n          if (Checkbox.current?.checked && Checkbox.current) {\n            callback(false)\n            Checkbox.current.checked = false\n          }\n        }\n    \n        document.addEventListener(\"mousedown\", checkIfClickedOutside)\n    \n        return () => {\n          // Cleanup the event listener\n          document.removeEventListener(\"mousedown\", checkIfClickedOutside)\n        }\n      }, [Checkbox.current?.checked])\n\n    //@ts-ignore\n    window.myDiv = hamburger.current\n\n\n    useEffect(() => {\n        document.addEventListener('click', closeMenu)\n\n    })\n\n\n\n    \n\n    return <Header \n        isCartMenuOpen={isCartMenuOpen}\n        setIsCartMenuOpen={setIsCartMenuOpen}\n        isLoginMenuOpen={isLoginMenuOpen} \n        setIsLoginMenuOpen={setIsLoginMenuOpen} \n        isNavbarOpen={isNavbarOpen} \n        logoText={logoText} \n        setIsNavbarOpen={setIsNavbarOpen} \n        hamburger={hamburger}\n        shoppingCart={shoppingCart}\n        userIcon={userIcon}\n        {...props}\n        />\n})\n\nexport default HeaderContainer"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,MAAzB,EAA4CC,SAA5C,QAA4D,OAA5D;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;AAMA,MAAMC,eAAiC,iCAAGL,KAAK,CAACM,IAAN,SAAYC,KAAD,IAAW;EAAA;;EAAA;;EAE5D,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAU,KAAV,CAAhD;EACA,MAAM,CAACS,eAAD,EAAkBC,kBAAlB,IAAwCV,QAAQ,CAAU,KAAV,CAAtD;EACA,MAAM,CAACW,cAAD,EAAiBC,iBAAjB,IAAsCZ,QAAQ,CAAW,KAAX,CAApD;EAEA,MAAMa,SAAS,GAAGZ,MAAM,CAAwB,IAAxB,CAAxB;EACA,MAAMa,YAAY,GAAGb,MAAM,CAAwB,IAAxB,CAA3B;EACA,MAAMc,QAAQ,GAAGd,MAAM,CAAwB,IAAxB,CAAvB;EAEA,MAAMe,QAAQ,GAAG,aAAjB;;EAEA,MAAMC,SAAS,GAAG,MAAM,CAEvB,CAFD;;EAIA,MAAMC,SAAS,GAAG,MAAM,CAEvB,CAFD;;EAKAhB,SAAS,CAAC,MAAM;IACZ,MAAMiB,qBAAqB,GAAG,MAAM;MAAA;;MAClC,IAAI,qBAAAC,QAAQ,CAACC,OAAT,gEAAkBC,OAAlB,IAA6BF,QAAQ,CAACC,OAA1C,EAAmD;QACjDE,QAAQ,CAAC,KAAD,CAAR;QACAH,QAAQ,CAACC,OAAT,CAAiBC,OAAjB,GAA2B,KAA3B;MACD;IACF,CALD;;IAOAE,QAAQ,CAACC,gBAAT,CAA0B,WAA1B,EAAuCN,qBAAvC;IAEA,OAAO,MAAM;MACX;MACAK,QAAQ,CAACE,mBAAT,CAA6B,WAA7B,EAA0CP,qBAA1C;IACD,CAHD;EAID,CAdM,EAcJ,uBAACC,QAAQ,CAACC,OAAV,uDAAC,mBAAkBC,OAAnB,CAdI,CAAT,CArB4D,CAqC5D;;EACAK,MAAM,CAACC,KAAP,GAAef,SAAS,CAACQ,OAAzB;EAGAnB,SAAS,CAAC,MAAM;IACZsB,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,EAAmCR,SAAnC;EAEH,CAHQ,CAAT;EASA,oBAAO,QAAC,MAAD;IACH,cAAc,EAAEN,cADb;IAEH,iBAAiB,EAAEC,iBAFhB;IAGH,eAAe,EAAEH,eAHd;IAIH,kBAAkB,EAAEC,kBAJjB;IAKH,YAAY,EAAEH,YALX;IAMH,QAAQ,EAAES,QANP;IAOH,eAAe,EAAER,eAPd;IAQH,SAAS,EAAEK,SARR;IASH,YAAY,EAAEC,YATX;IAUH,QAAQ,EAAEC,QAVP;IAAA,GAWCT;EAXD;IAAA;IAAA;IAAA;EAAA,QAAP;AAaH,CA/DyC,kCAAH,iCAAvC;;MAAMF,e;AAiEN,eAAeA,eAAf"},"metadata":{},"sourceType":"module"}